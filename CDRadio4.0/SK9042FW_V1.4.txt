*********************************************************************************************************************************************
时间：2018.3.15
一、软件复位
现象：
1、接收模式3下面，由模式2切换到模式1一定会触发复位，没有触发硬件错误，没有自动喂狗
2、频繁手动喂狗是可以导致看门狗的
3、提高打印语句后，复位更加频繁是因为喂狗更加频繁了。
4、切换RXMODE导致复位---可能跟一系列复位初始化有关（未解决）
可能原因：
1、频点数据写flash时，没有关闭中断，导致异常错误
2、看门狗频繁设置cnt导致异常错误
解决方法：
1、频点数据写入flash，先关闭中断，写入成功后再打开中断
2、为了避免写入flash关闭中断对算法的影响，规定只能在运行模式1时设置频点 



二、STM32对底层寄存器的封装，以WWDG为例，WWDG有3个寄存器，每个寄存器站32位（4字节）
1、定义一个机构体，包含三个32位整数
typedef struct
{
  _IO uint32_t CR;
  _IO uint32_t CFR;
  _IO uint32_t SR;
}WWDG_Typedef;
2、声明类型WWDG_Typedef的结构体变量，指向第一个寄存器变量的首地址
#define WWDG ((WWDG_Typedef*)WWDG_base)

三、模式2和模式3
增益调节：AccConfig.h->DFE_AGC_REFP
模式2增益=0x01可以搜台
模式3增益=0xf0可以搜台

迭代次数：QuickSearch->AVETIME
模式3 迭代次数=20
模式2 迭代次数=20 或者10


切换模式后，能找到频点，但是性能不稳定


*********************************************************************************************************************************************
时间：2018.3.16
前晚固件测试结果：
从3.15日下午6点到3.16日9点，算法一共发生3次重启：
1、有两次发生在搜台（已经找到频点），估计是写入flash导致的
2、有一次是因为触发了unknow HardFault,触发之前打印了很多+warning......

固件还有一个急需解决的问题：
1、切换模式之后，模式3可以搜到模式2的信号，无法解析出业务数据。state稳定为2.
2、感觉

自动搜台后验证的逻辑是否可以继续修改？


目前固件还需要完成的任务：
1、内接收的全局变量整理
2、搜台问题
3、复位问题

*********************************************************************************************************************************************
时间：2018.3.19
计划：
1、完成inner全局变量整理
  全局变量分三种：1）局部变量 2）静态全局变量  3）全局变量
2、实现入库

主题一：Inner全局变量整理
步骤：
1、确定变量是否在多个函数和多个函数中调用
2、确定是否初始化

条件编译使用用，记得及时清理，不然会对后面的理解造成麻烦


工作记录：
1、通过拉取合并保证和超哥的代码一致后，运行程序出现了不一样的情况。
2、把超哥的工程直接拷过来，可以运行，运行结果一致
3、我之前的那个芯片估计有点问题，总是答应“you can  not see here”
4、将超哥的代码和我内接收的代码合并后，运行良好，正在测试中
5、但是运行模式3切换接收模式后，模式2仍然把模式3的频点当做可用频点。



*********************************************************************************************************************************************
时间：2018.3.20
主题一：记录前晚测试结果，测试结果见2018.3.20固件测试.txt
一共发生三次重启,其中两次是发生在+warnning之后，一次是无端重启
尝试：
1、超哥修改了resetRxLink某个变量的初始值
1、无端重启怀疑是看门狗导致，因为喂狗不充分导致进入某个与看门狗主优先级一样的中断时，看门狗的cnt已经处在临界值状态，由于此时无法响应看门狗中断，导致被咬。针对这种情况，重新设计了中断优先级，看门狗的优先级设置为最高，为0，其他中断优先级+1。

主题二：对中断有限级别的理解
http://blog.csdn.net/macmacip/article/details/54179206
STM32(Cortex-M3)中有两个优先级的概念――抢占式优先级和响应优先级，有人把响应优先级称作'亚优先级'或'副优先级'，每个中断源都需要被指定这两种优先级。
具有高抢占式优先级的中断可以在具有低抢占式优先级的中断处理过程中被响应，即中断嵌套，或者说高抢占式优先级的中断可以嵌套低抢占式优先级的中断。
当两个中断源的抢占式优先级相同时，这两个中断将没有嵌套关系，当一个中断到来后，如果正在处理另一个中断，这个后到来的中断就要等到前一个中断处理完之后才能被处理。如果这两个中断同时到达，则中断控制器根据他们的响应优先级高低来决定先处理哪一个；如果他们的抢占式优先级和响应优先级都相等，则根据他们在中断表中的排位顺序决定先处理哪一个。


主题三：切换到接收模式2后，快速性能问题
1、貌似是DivTime修改后引起的

*********************************************************************************************************************************************
时间：2018.3.21
版本：V1.4
现存问题：模式2结算不是很稳定。具体现象如下：
1、会出现Hard Fault
2、关闭+warning后面的reset，关闭自动喂狗，断开数据线后，可以重连
3、打开+warning后面的reset，断开数据线后重连，链路可以重连，但是重连速度比2慢
4、出现一种情况，会打印“+warning”,然后会一直重连不上，软件reset也重连不上，必须硬件reset，猜想不是由于外部信号质量导致的，可能是算法中某个参数没有得到复位
解决思路：
1、复现第4中现象，尝试解决
2、如果解决不了，可以关闭开门狗自动喂狗，触发+warning,就运行while（1）触发看门狗复位，但是需要保存用户设置的模式信息

分支版本测试结果：
1、对InnerGloabal分支进行测试，模式2运行一晚上出现了+warning后不能重连的情况
2、对TEST_FEATURE进行同样的测试，没有出现此情况。(情况还是会发生，只是我认为概率很小很多)


待做：
1、冒烟测试场景


*********************************************************************************************************************************************
时间：2018.3.22
版本：V1.4
目标：将IAP升级代码移植到TEST_FEATURE版本



*********************************************************************************************************************************************
时间：2018.3.23
版本：V1.4
1、修改了AT指令没有按协议规范的部分
2、给产品、测试烧录版本使，直接点击桌面“测试部分升级”快捷键（注意不要点击编译）
3、RXmode逻辑修改。值写入flash，每次切换模式会触发看门狗复位。
4、版本基本稳定，待发布。（廖还没有烧录版本）


*********************************************************************************************************************************************
时间：2018.3.26
对AT指令进行了修复，修复以下问题：
1、固件版本显示格式问题
2、响应指令中去掉<>
3、修复LDPC响应没有+号的问题
4、AT指令文档总删除没有实现的部分

*********************************************************************************************************************************************
时间：2018.3.27
1、查看svn地址 进入SVN地址-TortoiseSNM-Repo-browser

主题一：实现实现代码升级自动化脚本
1、自动将Scr文件夹替换
2、自动实现main函数修改
3、自动拼接hex文件
4、自动实现hex文件替换

主题三：SVN基本使用
参考资料：https://jingyan.baidu.com/article/6c67b1d6f524d52787bb1ef3.html

主题四：关于固件的一个隐藏bug
1、设置频点时，如果设置一个错误的值，如果该值很小，可以正常的解析数据
2、每次关闭开发板电源时，都会进入HardFult

主题五：1.4版本的发布
1、完成相关文档的工作，除了AT指令还需要从外网转到内网


*********************************************************************************************************************************************
时间：2018.3.28
主题一：V1.4版本发布：已经在SVN上发布

主题二：给产品提供串口2发送业务数据的固件版本

主题三：固件版本修改
产品要求：
1、用户首次使用时，需手动设置频点，设置成功后，信息写入flash。
2、去掉运行模式这个概念
3、算法启动时，默认从flash中读取频点，如果用户没有设置过，则默认频点为98M。
4、如果需要自动搜台，发送AT指令
经验积累：在固件层无需过多考虑业务层逻辑，提供基础功能即可；另外，和产品保持积极沟通，确保产品意图。


*********************************************************************************************************************************************
时间：2018.3.29
主题一：按照产品意图修改V1.4版本固件
1、去掉RuningMode
2、增加快搜的AT指令

明天计划：
1、测试V1.4.1
2、发布V1.4.1
3、搭建5.0版本测试环境


*********************************************************************************************************************************************
时间：2018.3.30
1、快速性能不太好，含有信号的频点经常不在快搜的返回列表中
2、在STM32中，char默认无符号
3、去掉手动设置频点结束搜台的逻辑
4、新增频点check功能
5、Search后搜台会data overflow

*********************************************************************************************************************************************
时间：2018.4.2
1、修改波特率设置（只允许对串口2波特率进行设置）

2、发现新bug
1）第一次烧录芯片时，马上手动设置flash会造成复位----在已经用过的芯片上无法复现（擦除flash也无法复现）

*********************************************************************************************************************************************
时间：2018.4.4
主题一：关于9042的两个bug
1、V1.4.1在506测试时，串口1拔掉（时间较长），会触发hardfault复位
2、对48pin芯片频繁复位的问题进行调试，发现是tuler配置的时候出错。
   具体位置：si476X_core.c->void si476x_powerup_without_reset()->si476x_command()
   
*********************************************************************************************************************************************
时间：2018.4.9
1、修复48PIN芯片频繁复位问题，发布V1.4.2版本


*********************************************************************************************************************************************
时间：2018.4.10
1、修改升级的协议 V1.4.2beta1

*********************************************************************************************************************************************
时间：2018.4.11
两个问题:
1、SK9042-48PIN芯片测试板，信号强时能正常解出数据；在弱信号时（-75dBm）芯片出现复位的现象。
   环境：小板子
   先排查开发板是否有这个问题
   
2、信道差问题

*********************************************************************************************************************************************
时间：2018.4.12
预计发布V1.4.3，拟定增加如下功能：
1、tuler配置检查
2、频点值检查
3、关于DMA输出的改进
4、集成V1.4.2的临时版本

关于马经理要求串口1波特率9600的要求，经过测试，506发出的频点为95.8的数据，串口的速率为11300bit/s,所以无法支持9600

*********************************************************************************************************************************************
时间：2018.4.13
1、解决升级成功没有打印 +STUD=OK的问题
2、串口输出数量问题：
输出速率为5K的情况下，9600波特率会busy是以内外接收的输出是不平均的
解决方法：
用FIFO把输出数据缓存起来
3、AT指令设置频点值：范围98M-108M


*********************************************************************************************************************************************
-----------------------------------------
时间：2018.4.17
主题一、完成CRC校验功能----基础功能已经测试通过
参考文档：https://wenku.baidu.com/view/9f7b55876f1aff00bed51ec0.html  第一段代码亲测可用，本固件中使用的CRC校验即根据此代码改造完成
CRC码：CRC-CCITT G(x)=x16+x12+x5+1
基本原理：
1、将AT指令中的CRC值写入flash
2、boot程序中，在升级分支开始时，清CRCNum
3、串口每接收一个字符，调用CrcCountSingle()对全局变量CRCNum进行持续更新
4、完成接收后，将计算得到的CRCNum和flash进行比较

主题二、boot程序的逻辑需进一步完善

*********************************************************************************************************************************************
-----------------------------------------
时间：2018.4.18
修改boot逻辑缺陷：
1、升级完成后，固件需要重启一次才能正常运行
原因：升级完成后，由于中断向量表没有写入flash，导致复位。

2、增加对bin文件长度校验


V1.4.2beta3 :AT+STUD=0X1d91,49824
V1.4.2beta2 :AT+STUD=0X6822,49680


*********************************************************************************************************************************************
-----------------------------------------
时间：2018.4.19
计划：
1、把boot改好、并测试通过
2、调试tuler问题



测试结果：
1、新片先烧录boot，后通过串口烧录APP升级，成功
2、新片烧录axf（IAP+APP），成功
3、正常升级流程，成功
4、升级超时，成功
5、CRC校验错误，成功
6、长度校验错误，成功
7、AT指令中文件超长，成功
8、bin文件实际超长，成功



*********************************************************************************************************************************************
-----------------------------------------
时间：2018.4.20
1、荣灿修改了4761模块，集成到1.4.2beta3，初步测试成功
2、修改SNR过低时的清链路逻辑，不再对FREQ_VALID参数进行判断
3、对SnrTH参数进行调优（由3调整为-5）


发布版本:V1.4.3
48pIN:AT+STUD=0XA880,49740 
64PIN:AT+STUD=0XFCB2,49740

*********************************************************************************************************************************************
-----------------------------------------
时间：2018.4.25
1、发布V1.4.3beta1

二、模式四出现异常情况的调试
模式四出现了比较多的问题：
1、单板直连可以解数据，信号质量下降后（-50db）后无法解数据
2、开发板用天线可以正常解数据，单板用天线无法解数据
3、据刘明说，平板在508可以解数据。
原因猜想：
1、单板不如开发板抗干扰能力强
2、模式四信号容易被干扰

三：LDPC误码问题
现象：在信号比较强的情况下，LDPC也会发生误码
调试：在误码时，把LDPC输入重复输入，解码的情况时一样的
猜想：不知道是不是跟内接收优化丢失精度有关

*********************************************************************************************************************************************
-----------------------------------------
时间：2018.4.28
模式四观测现象：稳定在state=2，snr一直为负数


*********************************************************************************************************************************************
-----------------------------------------
时间：2018.5.3
主题：对朱总提供的测试用例进行调试
1、将bin文件转化为txt文件


内接收发现一个bug
1、channelEqu函数SubTmpFix的简化计算中，没有考虑FreqPilot实部虚部都为0的情况



*********************************************************************************************************************************************
-----------------------------------------
时间：2018.5.4
主题：修复C版本缺陷
1、DEF输出没有问题
2、帧同步的输出完全一致
3、PilotRun完全一致
4、qualityEst完全一致
5、TimeToFreq有误差

*********************************************************************************************************************************************
-----------------------------------------
时间：2018.5.5
一、complex.h中把struct t_Complex的数据类型从short改成long，情况变好了
1、channelEst的输出完全一致
2、TimeToFreq输出完全一样
3、ChannelEqqu的输出几乎一样，2400000个点中就错了4个点

4、外接收的输入一样



*********************************************************************************************************************************************
-----------------------------------------
时间：2018.5.7
1、定位到出现性能问题的位置和原因：是帧同步做延迟相关跳点引起的

在调试性能问题的过程中，发现了固件和C对照版存在以下问题：
一、固件：优化代码存在bug
1、QualityEst循环展开问题
2、ChannelEqu计算SubTmpFix没有考虑到实部虚部都为0的情况
3、ChannelEqu中demap需要还原
4、重大问题：帧同步跳点

C对照版本问题
1、FFT输入输出数据必须由16位变为32位
2、LDPC部分也有问题，只能解出控制信号，无法解出业务信号

*********************************************************************************************************************************************
-----------------------------------------
时间：2018.5.8
1、VS对照版TimeCfoEst求反三角函数参数弄反了

二、固件版
1、VS对照版TimeCfoEst求反三角函数优化有问题




*********************************************************************************************************************************************
-----------------------------------------
时间：2018.5.9
cordic算法：https://blog.csdn.net/liyuanbhu/article/details/8458769

4.1版本固件性能调试过程中的问题汇总：
1、QualityEst中循环控制出错
2、ChannelEqu中计算SubTmpFix时遗漏实部虚部都为0的情况
3、TimeCfoEst计算反正切时搞反了实部和虚部
4、FreqEst计算反正切时出现了溢出现象
5、TimeToFreq,有bug：

优化代码影响分析：
1、ChannelEst优化影响很小，生成28000个数据中，4000个数据产生了影响，影响很小，相差为1（数据都比较大），不影响解码
2、TimeToFreq,有bug：用指针代替结构体的做法有问题，修改之后产生的影响可以忽略，7万个点中有662个点相差特别小


*********************************************************************************************************************************************
-----------------------------------------
时间：2018.5.18
本周固件修改汇总：
1、DFE进入内接收的数据需要进行功率调整（右移四位），AGC参数设置为8
2、增加对延迟相关连续性计数，连续大于3次才会由IDLE状态切换为SYNC状态。
3、修改CENTER_CORR_WIN参数为64
4、修改ST_CHEST_DIVGIN参数为4
5、demap模块去掉LogLut
6、增加模式4滤波器参数
7、删除FreqEst中计算TempFix32的无效分支判断
8、删除FreqIfoEst中计算AddTmp的无效分支判断
9、增加6688的硬件驱动（硬件通了，但是解析数据有问题）
10、修复FFT标志位管理问题
11、PilotGen模块修改PilotRun接口
12、LDPC启用DMA方式，对调用内接收流程和业务数据输出流程有一定的影响
13、修改StackSize，由0X8000降低为0x4000

对上述问题修改后，发布了测试版V1.4.3beta3测试版，目前还存在几个问题：
1、固件稳定性：
   大大降低了触发hardfault的几率，但是还是观测到hardfault想象，关于hardfault有几点现象
   1）固件进入稳定运行状态后，很少触发hardfault，hardfaut大概率发生在解码失败之后
   2）算法稳定运行后，断电，很大概率触发hardfault
2、理性信号下的误码情况
  1）目前只有一种情况下不会产生误码：LDPC采用DMA方式，并且直接将LDPC解码结果输出。
  2）LDPC不采用DMA，或者LDPC解码结果输出采用FIFO方式都会造成误码。
  3）因为1）2），固件暂时不能完美支持9600波特率
3、固件灵敏度测试
  刘明对灵敏度的测试结果：
  1）在-90db时开始产生误码
  2）在-110db时误码情况比较严重


存在的风险：
1、QualityEst乘累加部分存在溢出风险
2、ChannelEqu设计到Fraction参数部分存在溢出风险


*********************************************************************************************************************************************
-----------------------------------------
时间：2018.5.19
模拟实采数据的频谱，重新构造低灵敏度的测试用例，测试未通过。
表现：
1、能同步（不一定同步正确），解不出控制信号
2、PilotIfo估计不出来、CpCfO估计不出来

*********************************************************************************************************************************************
-----------------------------------------
时间：2018.5.21
1、发布版本V1.5.0
